# Use Render's official Ubuntu-based Python image which includes build tools
# Updated to Python 3.13 to match Render's environment
FROM render/python:3.13

# Set the working directory inside the container
WORKDIR /app

# Copy the consolidated requirements file
COPY requirements.txt ./

# Install system dependencies that might be needed for building packages
RUN apt-get update && apt-get install -y build-essential gcc g++

# Upgrade pip to get the latest wheel support
RUN pip install --upgrade pip setuptools wheel

# Install core dependencies first (non-ML packages)
RUN pip install Flask Flask-SQLAlchemy psycopg2-binary celery redis stripe requests python-dotenv gunicorn --no-cache-dir

# Install ML dependencies with specific handling for compatibility
RUN pip install numpy>=1.26.0 scikit-learn>=1.3.0 --no-cache-dir --prefer-binary && \
    pip install torch>=2.2.0 --no-cache-dir --prefer-binary && \
    pip install transformers>=4.36.0 sentence-transformers>=2.2.0 --no-cache-dir --prefer-binary && \
    pip install tiktoken>=0.5.0 faiss-cpu>=1.7.4 annoy>=1.17.0 openai>=1.3.0 --no-cache-dir --prefer-binary

# Verify critical ML packages are installed
RUN python -c "import tiktoken; print('✅ tiktoken installed')" && \
    python -c "import faiss; print('✅ faiss installed')" && \
    python -c "import sentence_transformers; print('✅ sentence_transformers installed')" && \
    python -c "import transformers; print('✅ transformers installed')" && \
    python -c "import torch; print('✅ torch installed:', torch.__version__)" && \
    python -c "from annoy import AnnoyIndex; print('✅ annoy installed')" && \
    python -c "import openai; print('✅ openai installed')"

# Copy the rest of your application code into the container
COPY . . 